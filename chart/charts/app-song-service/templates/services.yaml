---
# resource-service Service
apiVersion: v1
kind: Service
metadata:
  name: app-resource-service
  namespace: {{ .Values.global.namespace | default "k8s-program" }}
{{- include "labels" . | indent 2 }}
spec:
  type: NodePort
  selector:
    app: app-resource-service
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30001

---
# resource-service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-resource-service-deployment
  namespace: {{ .Values.global.namespace | default "k8s-program" }}
{{- include "labels" . | indent 2 }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: app-resource-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
{{- include "labels" . | indent 6 }}
        app: app-resource-service
    spec:
      containers:
        - name: app-resource-service
          image: andreirohau/resource-service:latest
          ports:
            - containerPort: 8081
          env:
            - name: SERVER_ADDRESS
              #              value: 0.0.0.0
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: SERVER_ADDRESS
            - name: RS_DB_POSTGRES
              #              value: resource_service_db
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: RS_DB_POSTGRES
            - name: SPRING_DATASOURCE_URL
              #              value: jdbc:postgresql://db-resource-service:5432/resource_service_db?createDatabaseIfNotExist=true&useSSL=false
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: RS_SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              #              value: rsuser
              valueFrom:
                secretKeyRef:
                  name: my-secrets
                  key: RS_SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              #              value: rspwd
              valueFrom:
                secretKeyRef:
                  name: my-secrets
                  key: RS_SPRING_DATASOURCE_PASSWORD
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              #              value: update
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: SPRING_JPA_HIBERNATE_DDL_AUTO
            - name: SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION
              #              value: "true"
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION
            - name: SPRING_DATASOURCE_DRIVERCLASSNAME
              #              value: org.postgresql.Driver
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: SPRING_DATASOURCE_DRIVERCLASSNAME
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
              #              value: org.hibernate.dialect.PostgreSQLDialect
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
            - name: SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE
              #              value: 20MB
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE
            - name: SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE
              #              value: 20MB
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE
            - name: VALIDATOR_PARAMETER_LENGTH
              #              value: "200"
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: VALIDATOR_PARAMETER_LENGTH
            - name: SONG_SERVICE_ADDRESS
              #              value: http://app-song-service:8082
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: SONG_SERVICE_ADDRESS
            - name: SONG_SERVICE_API_SAVE
              #              value: http://app-song-service:8082/v1/api/songs
              valueFrom:
                configMapKeyRef:
                  name: var-map
                  key: SONG_SERVICE_API_SAVE
{{- include "serviceProbes" . | indent 10 }}
          volumeMounts:
            - name: app-resource-service-volume
              mountPath: "/app-data"
      volumes:
        - name: app-resource-service-volume
          persistentVolumeClaim:
            claimName: app-resource-service-pvc
